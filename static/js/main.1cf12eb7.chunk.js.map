{"version":3,"sources":["ColorPicker.module.css","ColorPicker.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ColorPicker","props","pallete","createRef","hueBar","alphaBar","selection","onSelectionClick","e","setState","open","state","pickerClose","target","current","wrapperRef","contains","setWrapperRef","node","limitPositionInsideBoundaries","position","onPickerDown","children","preventDefault","left","clientX","getBoundingClientRect","top","clientY","saturation","value","valid","pickerClicked","palletePickerX","palletePickerY","CSSColor","convertToFormat","hue","alpha","onPickerMove","onPickerUp","huePickerDown","huePickerClicked","huePickerX","huePickerMove","huePickerUp","alphaPickerDown","parentElement","alphaPickerClicked","alphaPickerX","alphaPickerMove","alphaPickerUp","isValidRGB","rgbColor","replace","split","r","Number","g","b","a","undefined","isNaN","isValidHex","hexColor","length","parseInt","isValidHSL","hslColor","h","s","l","onColorChange","ahsl","rhex","ghex","bhex","ahex","format","RGBtoHSV","v","Math","round","HSLToHSV","sat","val","invalidColor","toRGB","r1","g1","b1","c","x","abs","m","toHEX","trunc","toFixed","toString","padStart","toHSL","lig","min","max","delta","color","red","green","blue","lightness","changeFormat","substr","window","addEventListener","this","removeEventListener","picklesStyle","display","selectionStyle","backgroundColor","palleteStyle","backgroundImage","pickerStyle","huePickerStyle","alphaPickerStyle","alphaStyle","PickerPosition","classes","bottomRight","className","Wrapper","Selection","style","ref","onClick","Pickles","PalleteContainer","Pallete","Picker","HueContainer","Hue","HuePicker","AlphaContainer","Alpha","AlphaPicker","ControlsContainer","type","Value","onChange","Format","AlignRight","Set","Component","App","Fragment","console","log","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1cf12eb7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"ColorPicker_Wrapper__3T6OB\",\"Pickles\":\"ColorPicker_Pickles__26v1t\",\"bottomRight\":\"ColorPicker_bottomRight__3amYt\",\"topRight\":\"ColorPicker_topRight__t2Ie8\",\"bottomLeft\":\"ColorPicker_bottomLeft__1Kucr\",\"topLeft\":\"ColorPicker_topLeft__3YDOw\",\"Selection\":\"ColorPicker_Selection__-jTrN\",\"PalleteContainer\":\"ColorPicker_PalleteContainer__1OFa8\",\"Pallete\":\"ColorPicker_Pallete__1ZOQa\",\"Picker\":\"ColorPicker_Picker__k-y2N\",\"HueContainer\":\"ColorPicker_HueContainer__2KZRd\",\"Hue\":\"ColorPicker_Hue__3ThNC\",\"HuePicker\":\"ColorPicker_HuePicker__28tN_\",\"AlphaContainer\":\"ColorPicker_AlphaContainer__3TQCe\",\"Alpha\":\"ColorPicker_Alpha__3zCel\",\"AlphaPicker\":\"ColorPicker_AlphaPicker__XLko0\",\"ControlsContainer\":\"ColorPicker_ControlsContainer__1td4m\",\"Value\":\"ColorPicker_Value__25ZZA\",\"Format\":\"ColorPicker_Format__35LRj\",\"Color\":\"ColorPicker_Color__3hBv-\",\"Set\":\"ColorPicker_Set__2pzkx\",\"AlignRight\":\"ColorPicker_AlignRight__MOrZ5\"};","import React, { createRef, Component } from 'react';\r\n\r\nimport classes from './ColorPicker.module.css';\r\n\r\nclass ColorPicker extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            open: false,\r\n            valid: true,\r\n            palletePickerX: '142px',\r\n            palletePickerY: '-6px',\r\n            huePickerX: '-6px',\r\n            alphaPickerX: '-6px',\r\n\r\n            hue: 0,\r\n            saturation: 1,\r\n            value: 0.5,\r\n            alpha: 1,\r\n            \r\n            format: props.value ? props.value[0] === '#' ? 'hex' : props.value.substr(0, 3) : 'rgb',\r\n            CSSColor: props.value ? props.value : 'rgba(255, 0, 0, 1.00)',\r\n        }\r\n    }\r\n    \r\n    pallete = createRef();\r\n    hueBar = createRef();\r\n    alphaBar = createRef();\r\n    selection = createRef();\r\n\r\n    onSelectionClick = (e) => {\r\n        this.setState({\r\n            open: !this.state.open\r\n        });\r\n    }\r\n\r\n    pickerClose = (e) => {\r\n        if (e.target !== this.selection.current && this.wrapperRef && !this.wrapperRef.contains(e.target)) {\r\n            this.setState({ open: false })\r\n        }\r\n    }\r\n\r\n    setWrapperRef = (node) => {\r\n        this.wrapperRef = node;\r\n    }\r\n    \r\n    limitPositionInsideBoundaries = (position) => {\r\n        if (position < 0) {\r\n            return 0\r\n        } else if (position > 150) {\r\n            return 150\r\n        } else {\r\n            return position;\r\n        }\r\n    }\r\n\r\n    onPickerDown = (e) => {\r\n        if (e.target === this.pallete.current.children[0] || e.target === this.pallete.current.children[1])\r\n            e.preventDefault();\r\n        \r\n        if (e.target === this.pallete.current.children[0] || e.target === this.pallete.current.children[1]) {\r\n\r\n            let left = e.clientX - this.pallete.current.getBoundingClientRect().left;\r\n            let top = e.clientY - this.pallete.current.getBoundingClientRect().top;\r\n            \r\n            left = this.limitPositionInsideBoundaries(left);\r\n            top = this.limitPositionInsideBoundaries(top);\r\n\r\n            const saturation = left / 150;\r\n            const value = (1 - top / 150);\r\n\r\n            this.setState({\r\n                valid: true,\r\n                pickerClicked: true,\r\n                palletePickerX: left - 8 + 'px',\r\n                palletePickerY: top - 8 + 'px',\r\n                saturation: saturation,\r\n                value: value,\r\n                CSSColor: this.convertToFormat(this.state.hue, saturation, value, this.state.alpha)\r\n            });\r\n        }\r\n    }\r\n\r\n    onPickerMove = (e) => {\r\n        if (this.state.pickerClicked) {\r\n            let left = e.clientX - this.pallete.current.getBoundingClientRect().left;\r\n            let top = e.clientY - this.pallete.current.getBoundingClientRect().top;\r\n\r\n            left = this.limitPositionInsideBoundaries(left);\r\n            top = this.limitPositionInsideBoundaries(top);\r\n\r\n            const saturation = left / 150;\r\n            const value = (1 - top / 150);\r\n\r\n            this.setState({\r\n                valid: true,\r\n                palletePickerX: left - 8 + 'px',\r\n                palletePickerY: top - 8 + 'px',\r\n                saturation: saturation,\r\n                value: value,\r\n                CSSColor: this.convertToFormat(this.state.hue, saturation, value, this.state.alpha)\r\n            });\r\n        }\r\n    }\r\n\r\n    onPickerUp = () => {\r\n        this.setState({\r\n            pickerClicked: false\r\n        });\r\n    }\r\n\r\n    huePickerDown = (e) => {\r\n        if (e.target === this.hueBar.current.children[0] || e.target === this.hueBar.current.children[1])\r\n            e.preventDefault();\r\n\r\n        if (e.target === this.hueBar.current.children[0] || e.target === this.hueBar.current.children[1]) {\r\n            let left = e.clientX - this.hueBar.current.getBoundingClientRect().left;\r\n\r\n            left = this.limitPositionInsideBoundaries(left);\r\n\r\n            const hue = left / 150;\r\n\r\n            this.setState({\r\n                valid: true,\r\n                huePickerClicked: true,\r\n                huePickerX: left - 6 + 'px',\r\n                hue: hue,\r\n                CSSColor: this.convertToFormat(hue, this.state.saturation, this.state.value, this.state.alpha)\r\n            });\r\n        }\r\n    }\r\n\r\n    huePickerMove = (e) => {\r\n        if (this.state.huePickerClicked) {\r\n            let left = e.clientX - this.hueBar.current.getBoundingClientRect().left;\r\n\r\n            left = this.limitPositionInsideBoundaries(left);\r\n\r\n            const hue = left / 150;\r\n\r\n            this.setState({\r\n                valid: true,\r\n                huePickerX: left - 6 + 'px',\r\n                hue: hue,\r\n                CSSColor: this.convertToFormat(hue, this.state.saturation, this.state.value, this.state.alpha)\r\n            });\r\n        }\r\n    }\r\n\r\n    huePickerUp = () => {\r\n        this.setState({\r\n            huePickerClicked: false\r\n        });\r\n    }\r\n\r\n    alphaPickerDown = (e) => {\r\n        if (e.target === this.hueBar.current.children[0] || e.target === this.hueBar.current.children[1])\r\n            e.preventDefault();\r\n\r\n        if (e.target === this.alphaBar.current.children[0] || e.target === this.alphaBar.current.children[1]) {\r\n            let left = e.clientX - this.alphaBar.current.parentElement.getBoundingClientRect().left;\r\n\r\n            left = this.limitPositionInsideBoundaries(left);\r\n\r\n            const alpha = 1 - left / 150;\r\n\r\n            this.setState({\r\n                valid: true,\r\n                alphaPickerClicked: true,\r\n                alphaPickerX: left - 6 + 'px',\r\n                alpha: alpha,\r\n                CSSColor: this.convertToFormat(this.state.hue, this.state.saturation, this.state.value, alpha)\r\n            });\r\n        }\r\n    }\r\n\r\n    alphaPickerMove = (e) => {\r\n        if (this.state.alphaPickerClicked) {\r\n            let left = e.clientX - this.alphaBar.current.getBoundingClientRect().left;\r\n\r\n            left = this.limitPositionInsideBoundaries(left);\r\n\r\n            const alpha = 1 - left / 150;\r\n\r\n            this.setState({\r\n                valid: true,\r\n                alphaPickerX: left - 6 + 'px',\r\n                alpha: alpha,\r\n                CSSColor: this.convertToFormat(this.state.hue, this.state.saturation, this.state.value, alpha)\r\n            });\r\n        }\r\n    }\r\n\r\n    alphaPickerUp = () => {\r\n        this.setState({\r\n            alphaPickerClicked: false\r\n        });\r\n    }\r\n\r\n    isValidRGB = (CSSColor) => {\r\n        let valid = 0;\r\n        let rgbColor = CSSColor.replace('rgba(', '').replace(')', '').replace(/\\s/gi, '');\r\n        rgbColor = rgbColor.split(',');\r\n        const r = Number(rgbColor[0]);\r\n        const g = Number(rgbColor[1]);\r\n        const b = Number(rgbColor[2]);\r\n        const a = Number(rgbColor[3]) || undefined;\r\n        if (!Number.isNaN(r) && r >= 0 && r <= 255) valid++\r\n        if (valid && !Number.isNaN(g) && g >= 0 && g <= 255) valid++ \r\n        if (valid && !Number.isNaN(b) && b >= 0 && b <= 255) valid++\r\n        if (valid && !Number.isNaN(a) && a >= 0 && a <= 1) valid++\r\n        if (valid === 4) {\r\n            return [r, g, b, a];\r\n        } else {\r\n            return [false, false, false, false];\r\n        }\r\n    }\r\n\r\n    isValidHex = (CSSColor) => {\r\n        let valid = 0;\r\n        const hexColor = CSSColor.split('');\r\n\r\n        if (hexColor[0] !== '#') return [false]\r\n        if (hexColor.length > 9) return [false]\r\n\r\n        const r = Number(Number.parseInt(hexColor[1] + hexColor[2], 16));\r\n        const g = Number(Number.parseInt(hexColor[3] + hexColor[4], 16));\r\n        const b = Number(Number.parseInt(hexColor[5] + hexColor[6], 16));\r\n        let a = Number(Number.parseInt(hexColor[7] + hexColor[8], 16)) / 255;\r\n\r\n        if (!Number.isNaN(r) && r >= 0 && r <= 255) valid++\r\n        if (valid && !Number.isNaN(g) && g >= 0 && g <= 255) valid++ \r\n        if (valid && !Number.isNaN(b) && b >= 0 && b <= 255) valid++\r\n        if ((valid && !Number.isNaN(a) && a >= 0 && a <= 1)) valid++\r\n        if (hexColor.length === 7) {\r\n            valid++;\r\n            a = 1;\r\n        }\r\n        if (valid === 4) {\r\n            return [r, g, b, a];\r\n        } else {\r\n            return [false];\r\n        }\r\n    }\r\n\r\n    isValidHSL = (CSSColor) => {\r\n        let valid = 0;\r\n        let hslColor = CSSColor.replace('hsla(', '').replace(')', '').replace(/\\s/gi, '').replace(/%/gi, '').split(',');\r\n        const h = Number(hslColor[0]);\r\n        const s = Number(hslColor[1]);\r\n        const l = Number(hslColor[2]);\r\n        const a = Number(hslColor[3]);\r\n\r\n        if (!Number.isNaN(h) && h >= 0 && h <= 360) valid++\r\n        if (valid && !Number.isNaN(s) && s >= 0 && s <= 100) valid++ \r\n        if (valid && !Number.isNaN(l) && l >= 0 && l <= 100) valid++\r\n        if (valid && !Number.isNaN(a) && a >= 0 && a <= 1) valid++\r\n        if (valid === 4 ) {\r\n            return [h / 360, s / 100, l / 100, a];\r\n        } else {\r\n            return [false];\r\n        }\r\n    }\r\n\r\n    onColorChange = (e) => {\r\n        let r, g, b, alpha;\r\n        let h, s, l, ahsl;\r\n        let rhex, ghex, bhex, ahex;\r\n\r\n        [r, g, b, alpha] = this.isValidRGB(e.target.value);\r\n        [rhex, ghex, bhex, ahex] = this.isValidHex(e.target.value);\r\n        [h, s, l, ahsl] = this.isValidHSL(e.target.value);\r\n        \r\n        if (this.state.format === 'rgb' && r !== false) {\r\n            const [h, s, v, a] = this.RGBtoHSV(r, g, b, alpha);\r\n            \r\n            const palletePickerX = s * 150;\r\n            const palletePickerY = (1 - v) * 150;\r\n            const huePickerX = h * 150;\r\n            const alphaPickerX = (1 - a) * 150;\r\n            \r\n            this.setState({\r\n                valid: true,\r\n                hue: h,\r\n                saturation: s,\r\n                value: v,\r\n                alpha: a,\r\n                palletePickerX: palletePickerX - 8 + 'px',\r\n                palletePickerY: palletePickerY - 8 + 'px',\r\n                huePickerX: huePickerX - 6 + 'px',\r\n                alphaPickerX: alphaPickerX - 6 + 'px',\r\n                CSSColor: e.target.value\r\n            });\r\n        } else if (this.state.format === 'hex' && rhex !== false) {\r\n            const [h, s, v, a] = this.RGBtoHSV(rhex, ghex, bhex, ahex);\r\n            \r\n            const palletePickerX = s * 150;\r\n            const palletePickerY = (1 - v) * 150;\r\n            const huePickerX = Math.round(h * 150);\r\n            const alphaPickerX = (1 - a) * 150;\r\n\r\n            this.setState({\r\n                valid: true,\r\n                hue: h,\r\n                saturation: s,\r\n                value: v,\r\n                alpha: a,\r\n                palletePickerX: palletePickerX -8 + 'px',\r\n                palletePickerY: palletePickerY - 8 + 'px',\r\n                huePickerX: huePickerX - 6 + 'px',\r\n                alphaPickerX: alphaPickerX - 6 + 'px',\r\n                CSSColor: e.target.value\r\n            });\r\n        } else if (this.state.format === 'hsl' && h !== false) {\r\n            const [hue, sat, val, alpha] = this.HSLToHSV(h, s, l, ahsl);\r\n\r\n            const palletePickerX = sat * 150;\r\n            const palletePickerY = (1 - val) * 150;\r\n            const huePickerX = Math.round(hue * 150);\r\n            const alphaPickerX = (1 - alpha) * 150;\r\n\r\n            this.setState({\r\n                valid: true,\r\n                hue: hue,\r\n                saturation: sat,\r\n                value: val,\r\n                alpha: alpha,\r\n                palletePickerX: palletePickerX -8 + 'px',\r\n                palletePickerY: palletePickerY - 8 + 'px',\r\n                huePickerX: huePickerX - 6 + 'px',\r\n                alphaPickerX: alphaPickerX - 6 + 'px',\r\n                CSSColor: e.target.value\r\n            });\r\n        } else {\r\n            this.setState({\r\n                valid: false,\r\n                invalidColor: e.target.value\r\n            });\r\n        }\r\n\r\n        if (this.props.onColorChange) {\r\n            this.props.onColorChange(e.target.value);\r\n        }\r\n    }\r\n\r\n    toRGB = (h, s, v, alpha) => {\r\n        const hue = Math.round(h * 360);\r\n\r\n        const c = v * s;\r\n        const x = c * (1 - Math.abs(((hue/60) % 2) - 1));\r\n        const m = v - c;\r\n        \r\n        let r1, g1, b1;\r\n        let r, g, b;\r\n\r\n        if (hue >= 0 && hue < 60) {\r\n            r1 = c;\r\n            g1 = x;\r\n            b1 = 0;\r\n        } else if (hue >= 60 && hue < 120) {\r\n            r1 = x;\r\n            g1 = c;\r\n            b1 = 0;\r\n        } else if (hue >= 120 && hue < 180) {\r\n            r1 = 0;\r\n            g1 = c;\r\n            b1 = x;\r\n        } else if (hue >= 180 && hue < 240) {\r\n            r1 = 0;\r\n            g1 = x;\r\n            b1 = c;\r\n        } else if (hue >= 240 && hue < 300) {\r\n            r1 = x;\r\n            g1 = 0;\r\n            b1 = c;\r\n        } else if (hue >= 300 && hue < 360) {\r\n            r1 = c;\r\n            g1 = 0;\r\n            b1 = x;\r\n        }\r\n        \r\n        r = (r1 + m);\r\n        g = (g1 + m);\r\n        b = (b1 + m);\r\n\r\n        return [r, g, b, alpha];\r\n    }\r\n\r\n    toHEX = (h, s, v, alpha) => {\r\n        let [r, g, b] = this.toRGB(h, s, v, alpha);\r\n        \r\n        r = Math.round(r * 255);\r\n        g = Math.round(g * 255);\r\n        b = Math.round(b * 255);\r\n\r\n        if (this.state.alpha !== 1) {\r\n            alpha = Math.trunc(Number(this.state.alpha.toFixed(2)) * 255).toString(16)\r\n        } else {\r\n            alpha = '';\r\n        }\r\n\r\n        let hexColor = r.toString(16).padStart(2, '0') + g.toString(16).padStart(2, '0') + b.toString(16).padStart(2, '0') + alpha;\r\n        return hexColor;\r\n    }\r\n\r\n    toHSL = (h, s, v, alpha) => {\r\n        let sat;\r\n        const lig = v * ( 1 - s / 2);\r\n\r\n        if (lig === 0 || lig === 1) {\r\n            sat = 0;\r\n        } else {\r\n            sat = (v - lig) / (Math.min(lig, 1 - lig));\r\n        }\r\n\r\n        return [h, sat, lig, alpha];\r\n    }\r\n\r\n    RGBtoHSV =  (r, g, b, a) => {\r\n        let h, s, v, alpha = a;\r\n        let min, max, delta;\r\n\r\n        min = r < g ? r : g;\r\n        min = min  < b ? min  : b;\r\n\r\n        max = r > g ? r : g;\r\n        max = max  > b ? max  : b;\r\n\r\n        v = max / 255;\r\n        delta = max - min;\r\n        if (delta < 0.00001)\r\n        {\r\n            s = 0;\r\n            h = 0;\r\n            return [h, s, v, alpha];\r\n        }\r\n        if( max > 0.0 ) {\r\n            s = (delta / max);\r\n        } else {\r\n            s = 0.0;\r\n            h = undefined;\r\n            return [h, s, v, alpha];\r\n        }\r\n        if( r >= max )\r\n            h = ( g - b ) / delta;\r\n        else\r\n        if( g >= max )\r\n            h = 2.0 + ( b - r ) / delta;\r\n        else\r\n            h = 4.0 + ( r - g ) / delta;\r\n\r\n        h *= 60.0;\r\n\r\n        if( h < 0.0 )\r\n            h += 360.0;\r\n\r\n        h /= 360;\r\n        return [h, s, v, alpha]\r\n    }\r\n\r\n    HSLToHSV = (h, s, l, a) => {\r\n        const v = l + s * Math.min(l, 1 - l);\r\n        \r\n        s = v === 0 ? 0 : 2 * ( 1 - l / v);\r\n\r\n        return [h, s, v, a]\r\n    }\r\n\r\n    convertToFormat = (h, s, v, alpha) => {\r\n        let color = '';\r\n        if (this.state.format === 'rgb') {\r\n            const [red, green, blue] = this.toRGB(h, s, v, alpha)\r\n            color = `rgba(${Math.round(red * 255)}, ${Math.round(green * 255)}, ${Math.round(blue * 255)}, ${alpha.toFixed(2)})`;\r\n        } else if (this.state.format === 'hex') {\r\n            color = '#' + this.toHEX(h, s, v, alpha);\r\n        } else {\r\n            const [hue, saturation, lightness] = this.toHSL(h, s, v, alpha)\r\n            color = `hsla(${Math.round(hue * 360)}, ${Math.round(saturation * 100) + '%'}, ${Math.round(lightness * 100) + '%'}, ${alpha.toFixed(2)})`;\r\n        }\r\n        if (this.props.onColorChange) {\r\n            this.props.onColorChange(color);\r\n        }\r\n        return color;\r\n    }\r\n\r\n    changeFormat = () => {\r\n        this.setState({\r\n            format: this.state.format === 'rgb' ? 'hex' : this.state.format === 'hex' ? 'hsl' : 'rgb'\r\n        }, () => {this.setState({ valid: true, CSSColor: this.convertToFormat(this.state.hue, this.state.saturation, this.state.value, this.state.alpha)})});\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('mousedown', this.onPickerDown);\r\n        window.addEventListener('mousemove', this.onPickerMove);\r\n        window.addEventListener('mouseup', this.onPickerUp);\r\n\r\n        window.addEventListener('mousedown', this.huePickerDown);\r\n        window.addEventListener('mousemove', this.huePickerMove);\r\n        window.addEventListener('mouseup', this.huePickerUp);\r\n\r\n        window.addEventListener('mousedown', this.alphaPickerDown);\r\n        window.addEventListener('mousemove', this.alphaPickerMove);\r\n        window.addEventListener('mouseup', this.alphaPickerUp);\r\n\r\n        window.addEventListener('click', this.pickerClose);\r\n\r\n        if (this.props.value) {\r\n            this.onColorChange({ target: { value: this.props.value } });\r\n\r\n        }\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        window.removeEventListener('mousedown', this.onPickerDown);\r\n        window.removeEventListener('mousemove', this.onPickerMove);\r\n        window.removeEventListener('mouseup', this.onPickerUp);\r\n\r\n        window.removeEventListener('mousedown', this.huePickerDown);\r\n        window.removeEventListener('mousemove', this.huePickerMove);\r\n        window.removeEventListener('mouseup', this.huePickerUp);\r\n\r\n        window.removeEventListener('mousedown', this.alphaPickerDown);\r\n        window.removeEventListener('mousemove', this.alphaPickerMove);\r\n        window.removeEventListener('mouseup', this.alphaPickerUp);\r\n    }\r\n\r\n    render() {\r\n        const picklesStyle = {\r\n            display: this.state.open ? 'block' : 'none'\r\n        }\r\n        \r\n        const selectionStyle = {\r\n            backgroundColor: this.state.CSSColor\r\n        }\r\n\r\n        const palleteStyle = {\r\n            backgroundImage: `linear-gradient(to top, rgba(0, 0, 0, ${this.state.alpha.toFixed(2)}), transparent), linear-gradient(to left, hsla(${Math.round(this.state.hue * 360)}, 100%, 50%, ${this.state.alpha.toFixed(2)}), rgba(255, 255, 255, ${this.state.alpha.toFixed(2)}))`\r\n        }\r\n\r\n        const pickerStyle = {\r\n            top: this.state.palletePickerY,\r\n            left: this.state.palletePickerX,\r\n            backgroundColor: this.state.CSSColor\r\n        }\r\n        \r\n        const huePickerStyle = {\r\n            left: this.state.huePickerX,\r\n            backgroundColor: `hsl(${Math.round(this.state.hue * 360)}, 100%, 50%)`\r\n        }\r\n\r\n        const alphaPickerStyle = {\r\n            left: this.state.alphaPickerX,\r\n            backgroundColor: this.state.CSSColor\r\n        }\r\n\r\n        const alphaStyle = {\r\n            backgroundImage: `linear-gradient(to left, transparent, ${this.state.CSSColor.replace(/,[\\s\\d.]+\\)/, ', 1)')})`\r\n        }\r\n\r\n        let color;\r\n        if (this.state.valid === false) {\r\n            color = this.state.invalidColor;\r\n        } else {\r\n            color = this.state.CSSColor;\r\n        }\r\n\r\n        let PickerPosition = this.props.position ? ' ' + classes[this.props.position] : ' ' + classes.bottomRight;\r\n\r\n        return (\r\n            <div className={classes.Wrapper}>\r\n                <div className={classes.Selection} style={selectionStyle} ref={this.selection} onClick={this.onSelectionClick}></div>\r\n                <div className={classes.Pickles + PickerPosition} style={picklesStyle} ref={this.setWrapperRef}>\r\n                    <div className={classes.PalleteContainer} ref={this.pallete}>\r\n                        <div className={classes.Pallete} style={palleteStyle}></div>\r\n                        <div className={classes.Picker} style={pickerStyle}></div>\r\n                    </div>\r\n                    <div className={classes.HueContainer} ref={this.hueBar}>\r\n                        <div className={classes.Hue}></div>\r\n                        <div className={classes.HuePicker} style={huePickerStyle}></div>\r\n                    </div>\r\n                    <div className={classes.AlphaContainer} ref={this.alphaBar}>\r\n                        <div className={classes.Alpha} style={alphaStyle}></div>\r\n                        <div className={classes.AlphaPicker} style={alphaPickerStyle}></div>\r\n                    </div>\r\n                    <div className={classes.ControlsContainer}>\r\n                        <input type=\"text\" className={classes.Value} value={color} onChange={this.onColorChange}/>\r\n                        <button className={classes.Format} onClick={this.changeFormat}>{this.state.format}</button>\r\n                    </div>\r\n                    <div className={classes.AlignRight}>\r\n                        <button className={classes.Set}>ok</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ColorPicker;","import React from 'react';\n\nimport ColorPicker from './ColorPicker'\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <ColorPicker value=\"rgba(80,80,80,1)\" onColorChange={(color) => console.log(color)}/>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}